(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{407:function(e,t,a){"use strict";a.r(t);var n=a(42),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"head-first-design-patterns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#head-first-design-patterns"}},[e._v("#")]),e._v(" Head First Design Patterns")]),e._v(" "),a("blockquote",[a("p",[e._v("Notes on Eric Freeman' and Elisabeth Robson' \"Head First Design Patterns\".")])]),e._v(" "),a("p",[a("strong",[e._v("DESIGN PRINCIPLE:")])]),e._v(" "),a("p",[a("em",[e._v("Identify the aspects of your application that vary and separate them from what stays the same.")])]),e._v(" "),a("p",[e._v("Take what varies and "),a("em",[e._v("encapsulate")]),e._v(" it so it won't affect the rest of your code. The result? Fewer unintended consequences from code changes and more flexibility in your systems!")]),e._v(" "),a("p",[e._v("Simply told: if you've got some aspect of your code that is changing, say with every new requirement, then you know you've got a behavior that needs to be pulled out and separated from all the stuff that doesn't change.")]),e._v(" "),a("p",[a("strong",[e._v("DESIGN PRINCIPLE:")])]),e._v(" "),a("p",[a("em",[e._v("Program to an interface, not an implementation.")])]),e._v(" "),a("p",[a("em",[e._v("Program to an interface")]),e._v(" really means "),a("em",[e._v("Program to a supertype.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);