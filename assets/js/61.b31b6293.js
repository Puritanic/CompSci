(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{483:function(e,t,o){"use strict";o.r(t);var a=o(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("blockquote",[o("p",[e._v("Applying The Boy Scout rule in coding")])]),e._v(" "),o("p",[e._v("Robert Baden-Powell is attributed with the following quote:")]),e._v(" "),o("blockquote",[o("p",[e._v("Try and leave this world a little better than you found it, and when your turn comes to die, you can die happy in feeling that at any rate, you have not wasted your time but have done your best.")])]),e._v(" "),o("p",[e._v("Uncle Bob (Robert C. Martin) has further interpreted the quote as:")]),e._v(" "),o("blockquote",[o("p",[e._v("Always leave the code you're editing a little better than you found it")])]),e._v(" "),o("p",[e._v("and")]),e._v(" "),o("blockquote",[o("p",[e._v("Indeed, the act of leaving a mess in the code should be as socially unacceptable as littering. It should be something that just isn't done.")])]),e._v(" "),o("p",[e._v("As software is developed and evolves, technical debt is said to increase. Members of staff change, yet the code stays the same, and features are added to the code. Keeping code in good condition and clean makes sense, and code should represent your understanding of the code at any given time.")]),e._v(" "),o("p",[e._v("I've spent a lot of my time maintaining working code. I think that is more typical of software developers than working in greenfield development. Yes, there are jobs where you are writing more new code than maintaining, upgrading, bug fixing and improving old code (startups and consulting for example) but in general code is expensive and people want to run it for a long time.")]),e._v(" "),o("p",[e._v("Often you'll jump into code to fix a bug, investigate an issue or answer a question.")]),e._v(" "),o("p",[e._v("When you do so, improve it. This doesn't mean you rewrite it, upgrade all the libraries it depends on, or rename all the variables.")]),e._v(" "),o("p",[e._v("You don't need to transform it.")]),e._v(" "),o("p",[e._v("But it would help if you made it better. Just clean it up a bit. Doing so makes everyone's lives only a bit better, sustainably helps the codebase, and assists the business by making its supporting infrastructure more flexible.")]),e._v(" "),o("p",[e._v("What are some ways to improve the code when you are in it?")]),e._v(" "),o("h2",{attrs:{id:"document"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[e._v("#")]),e._v(" Document")]),e._v(" "),o("p",[e._v("Whether that is a comment that explains something tricky, a larger piece of documentation external to the code which describes how to interact with it or fixing a typo, trustworthy documentation is key to interacting with code. This is an excellent way to start improving a codebase because it has minimal impact on the actual code. Therefore it is low risk. But if you've ever had a great comment explain a confusing bit of code, you'll appreciate the time this effort can save.")]),e._v(" "),o("p",[e._v("You can also help with documentation by removing old, crufty docs. If you see a comment that doesn't apply, remove it. If there's cut and paste documentation that doesn't apply, get rid of it. That cleans up the code for the next person to come along (who might be you).")]),e._v(" "),o("h2",{attrs:{id:"write-a-test-or-improve-a-test"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#write-a-test-or-improve-a-test"}},[e._v("#")]),e._v(" Write a test or improve a test")]),e._v(" "),o("p",[e._v("Tests help you write maintainable, extensible code that others can change fearlessly. If you run across code that isn't tested and have time and the supporting framework to write one.")]),e._v(" "),o("p",[e._v('Even if it tests simple functionality such as "'),o("em",[e._v("can I instantiate this object")]),e._v('" or "'),o("em",[e._v("how does this function react when I pass it two null values")]),e._v('", an additional test will help the robustness of the code.')]),e._v(" "),o("h2",{attrs:{id:"refactor-it"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#refactor-it"}},[e._v("#")]),e._v(" Refactor it")]),e._v(" "),o("p",[e._v("This is one of the most flexible improvements. Refactoring code can range from renaming a variable to be relevant to its nature to an entire module's overhaul. Start small and don't get wrapped up in perfection. Make the code clearer in intent.")]),e._v(" "),o("p",[e._v("A warning about refactoring:")]),e._v(" "),o("ul",[o("li",[e._v("Don't refactor what you don't understand.")]),e._v(" "),o("li",[e._v("Discuss your plan with someone more familiar with the code; git blame is your friend.")])]),e._v(" "),o("p",[e._v("Especially if the code is not well tested, you want to make sure you don't do more harm than good.")]),e._v(" "),o("h2",{attrs:{id:"writing-good-code"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#writing-good-code"}},[e._v("#")]),e._v(" Writing good code")]),e._v(" "),o("blockquote",[o("p",[e._v("Good code should represent your understanding of the working of the software at any given time.")])]),e._v(" "),o("p",[e._v("We should write code in such a way that it is clean and easy to understand. If you are writing code that you don't understand, this is the first thing that needs to be fixed in your development of software. Even if you find code that is a mess that you didn't create, there is a moral impetus on you to create software that is easy to understand, clean and maintainable going forwards into the future.")]),e._v(" "),o("h2",{attrs:{id:"why"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[e._v("#")]),e._v(" Why?")]),e._v(" "),o("p",[e._v("All of these actions help others because they improve the quality of the code. They also provide examples to other developers on how to do so. For example, it is far easier to write the second test in a suite than the first. You can cut and paste a lot of the setup code and tweak only what is different. The first bit of documentation will inspire more.")]),e._v(" "),o("p",[e._v("Code isn't everything, but it is a crucial work output. Whenever you touch it, you should strive to leave it in a better place than it was before you did so.")]),e._v(" "),o("h2",{attrs:{id:"references"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),o("ol",[o("li",[e._v("mooreds, Always leave the code better than you found it, 2020, "),o("a",{attrs:{href:"https://letterstoanewdeveloper.com/2020/11/23/always-leave-the-code-better-than-you-found-it/",target:"_blank",rel:"noopener noreferrer"}},[e._v("letterstoanewdeveloper.com"),o("OutboundLink")],1),e._v(".")])])])}),[],!1,null,null,null);t.default=n.exports}}]);